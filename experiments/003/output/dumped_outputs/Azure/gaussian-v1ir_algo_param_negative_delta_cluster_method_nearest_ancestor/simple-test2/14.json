{"image_id": 14, "image_height": 1676, "image_width": 2917, "ocr_provider": "Azure", "ocr_ouptut": [{"x": 233.0, "y": 101.0, "w": 1461.0, "h": 205.0, "line_num": 1, "text": "def factorial (n):"}, {"x": 459.0, "y": 355.0, "w": 678.0, "h": 160.0, "line_num": 2, "text": "if n= = 0 :"}, {"x": 725.0, "y": 591.0, "w": 681.0, "h": 136.0, "line_num": 3, "text": "return 1"}, {"x": 451.0, "y": 815.0, "w": 453.0, "h": 151.0, "line_num": 4, "text": "else :"}, {"x": 720.0, "y": 997.0, "w": 2048.0, "h": 170.0, "line_num": 5, "text": "return 1 * factorial (n-1)"}, {"x": 297.0, "y": 1247.0, "w": 1486.0, "h": 201.0, "line_num": 6, "text": "print (factorial (5)"}], "ir_algo_name": "gaussian-v1", "ir_algo_param_negative_delta_cluster_method": "nearest_ancestor", "ir_algo_output_code": "def factorial (n):\n    if n= = 0 :\n        return 1\n    else :\n        return 1 * factorial (n-1)\nprint (factorial (5)\n", "ir_algo_output_indented_lines": [{"x": 233.0, "y": 101.0, "w": 1461.0, "h": 205.0, "line_num": 1, "text": "def factorial (n):", "delta": null, "delta_type": null, "gaussian_prediction": null, "cluster_label": 0}, {"x": 459.0, "y": 355.0, "w": 678.0, "h": 160.0, "line_num": 2, "text": "if n= = 0 :", "delta": 226.0, "delta_type": "positive", "gaussian_prediction": "1", "cluster_label": 1}, {"x": 725.0, "y": 591.0, "w": 681.0, "h": 136.0, "line_num": 3, "text": "return 1", "delta": 266.0, "delta_type": "positive", "gaussian_prediction": "1", "cluster_label": 2}, {"x": 451.0, "y": 815.0, "w": 453.0, "h": 151.0, "line_num": 4, "text": "else :", "delta": -274.0, "delta_type": "negative", "gaussian_prediction": null, "cluster_label": 1}, {"x": 720.0, "y": 997.0, "w": 2048.0, "h": 170.0, "line_num": 5, "text": "return 1 * factorial (n-1)", "delta": 269.0, "delta_type": "positive", "gaussian_prediction": "1", "cluster_label": 2}, {"x": 297.0, "y": 1247.0, "w": 1486.0, "h": 201.0, "line_num": 6, "text": "print (factorial (5)", "delta": -423.0, "delta_type": "negative", "gaussian_prediction": null, "cluster_label": 0}], "ir_algo_output_edit_distance": 12, "prompting_method": "simple-test2", "lm_post_processed_code": "def factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\nprint(factorial(5))\n", "lm_post_processed_edit_distance": 2}