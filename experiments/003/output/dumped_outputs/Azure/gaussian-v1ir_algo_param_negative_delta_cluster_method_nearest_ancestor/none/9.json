{"image_id": 9, "image_height": 4032, "image_width": 3024, "ocr_provider": "Azure", "ocr_ouptut": [{"x": 433.0, "y": 250.0, "w": 465.0, "h": 97.0, "line_num": 1, "text": "de main ():"}, {"x": 524.0, "y": 424.0, "w": 622.0, "h": 82.0, "line_num": 2, "text": "vowel-count=0"}, {"x": 559.0, "y": 568.0, "w": 1278.0, "h": 132.0, "line_num": 3, "text": "vowels=['\u00e0' ,'e' ,' i','o', 'u']"}, {"x": 586.0, "y": 857.0, "w": 1587.0, "h": 107.0, "line_num": 4, "text": "input-string = input (\"Enter the string:\")"}, {"x": 629.0, "y": 1044.0, "w": 1389.0, "h": 118.0, "line_num": 5, "text": "input string = input_string . lower ()"}, {"x": 676.0, "y": 1326.0, "w": 926.0, "h": 105.0, "line_num": 6, "text": "for char in input string:"}, {"x": 774.0, "y": 1492.0, "w": 880.0, "h": 106.0, "line_num": 7, "text": "for vowel in vowels :"}, {"x": 946.0, "y": 1660.0, "w": 754.0, "h": 122.0, "line_num": 8, "text": "if char == vowel:"}, {"x": 1114.0, "y": 1854.0, "w": 658.0, "h": 93.0, "line_num": 9, "text": "vowel-count+=1"}, {"x": 719.0, "y": 2046.0, "w": 793.0, "h": 101.0, "line_num": 10, "text": "point (nouvel_count)"}, {"x": 545.0, "y": 2251.0, "w": 1097.0, "h": 108.0, "line_num": 11, "text": "y_name _== '_main __ :"}, {"x": 680.0, "y": 2427.0, "w": 281.0, "h": 92.0, "line_num": 12, "text": "main ( )"}], "ir_algo_name": "gaussian-v1", "ir_algo_param_negative_delta_cluster_method": "nearest_ancestor", "ir_algo_output_code": "de main ():\n    vowel-count=0\n    vowels=['\u00e0' ,'e' ,' i','o', 'u']\n    input-string = input (\"Enter the string:\")\n    input string = input_string . lower ()\n    for char in input string:\n        for vowel in vowels :\n            if char == vowel:\n                vowel-count+=1\n    point (nouvel_count)\ny_name _== '_main __ :\n    main ( )\n", "ir_algo_output_indented_lines": [{"x": 433.0, "y": 250.0, "w": 465.0, "h": 97.0, "line_num": 1, "text": "de main ():", "delta": null, "delta_type": null, "gaussian_prediction": null, "cluster_label": 0}, {"x": 524.0, "y": 424.0, "w": 622.0, "h": 82.0, "line_num": 2, "text": "vowel-count=0", "delta": 91.0, "delta_type": "positive", "gaussian_prediction": "1", "cluster_label": 1}, {"x": 559.0, "y": 568.0, "w": 1278.0, "h": 132.0, "line_num": 3, "text": "vowels=['\u00e0' ,'e' ,' i','o', 'u']", "delta": 35.0, "delta_type": "positive", "gaussian_prediction": "0", "cluster_label": 1}, {"x": 586.0, "y": 857.0, "w": 1587.0, "h": 107.0, "line_num": 4, "text": "input-string = input (\"Enter the string:\")", "delta": 27.0, "delta_type": "positive", "gaussian_prediction": "0", "cluster_label": 1}, {"x": 629.0, "y": 1044.0, "w": 1389.0, "h": 118.0, "line_num": 5, "text": "input string = input_string . lower ()", "delta": 43.0, "delta_type": "positive", "gaussian_prediction": "0", "cluster_label": 1}, {"x": 676.0, "y": 1326.0, "w": 926.0, "h": 105.0, "line_num": 6, "text": "for char in input string:", "delta": 47.0, "delta_type": "positive", "gaussian_prediction": "0", "cluster_label": 1}, {"x": 774.0, "y": 1492.0, "w": 880.0, "h": 106.0, "line_num": 7, "text": "for vowel in vowels :", "delta": 98.0, "delta_type": "positive", "gaussian_prediction": "1", "cluster_label": 2}, {"x": 946.0, "y": 1660.0, "w": 754.0, "h": 122.0, "line_num": 8, "text": "if char == vowel:", "delta": 172.0, "delta_type": "positive", "gaussian_prediction": "1", "cluster_label": 3}, {"x": 1114.0, "y": 1854.0, "w": 658.0, "h": 93.0, "line_num": 9, "text": "vowel-count+=1", "delta": 168.0, "delta_type": "positive", "gaussian_prediction": "1", "cluster_label": 4}, {"x": 719.0, "y": 2046.0, "w": 793.0, "h": 101.0, "line_num": 10, "text": "point (nouvel_count)", "delta": -395.0, "delta_type": "negative", "gaussian_prediction": null, "cluster_label": 1}, {"x": 545.0, "y": 2251.0, "w": 1097.0, "h": 108.0, "line_num": 11, "text": "y_name _== '_main __ :", "delta": -174.0, "delta_type": "negative", "gaussian_prediction": null, "cluster_label": 0}, {"x": 680.0, "y": 2427.0, "w": 281.0, "h": 92.0, "line_num": 12, "text": "main ( )", "delta": 135.0, "delta_type": "positive", "gaussian_prediction": "1", "cluster_label": 1}], "ir_algo_output_edit_distance": 53, "prompting_method": "none", "lm_post_processed_code": "de main ():\n    vowel-count=0\n    vowels=['\u00e0' ,'e' ,' i','o', 'u']\n    input-string = input (\"Enter the string:\")\n    input string = input_string . lower ()\n    for char in input string:\n        for vowel in vowels :\n            if char == vowel:\n                vowel-count+=1\n    point (nouvel_count)\ny_name _== '_main __ :\n    main ( )\n", "lm_post_processed_edit_distance": 53}