{"image_id": 19, "image_height": 2048, "image_width": 1536, "ocr_provider": "Azure", "ocr_ouptut": [{"x": 298.0, "y": 194.0, "w": 303.0, "h": 72.0, "line_num": 1, "text": "def main ():"}, {"x": 303.0, "y": 274.0, "w": 773.0, "h": 74.0, "line_num": 2, "text": "num = int (input (\" Enter a Nmbu :"}, {"x": 300.0, "y": 336.0, "w": 1105.0, "h": 61.0, "line_num": 3, "text": "print (f\"Enums is &'prime if is_ prime (nom)"}, {"x": 812.0, "y": 396.0, "w": 476.0, "h": 60.0, "line_num": 4, "text": "else not prim\u00e9 3\")"}, {"x": 256.0, "y": 469.0, "w": 533.0, "h": 78.0, "line_num": 5, "text": "def is- prone (1) :"}, {"x": 379.0, "y": 542.0, "w": 390.0, "h": 68.0, "line_num": 6, "text": "if n <= 12"}, {"x": 470.0, "y": 610.0, "w": 435.0, "h": 66.0, "line_num": 7, "text": "return false"}, {"x": 384.0, "y": 702.0, "w": 480.0, "h": 82.0, "line_num": 8, "text": "elif > <= 3:"}, {"x": 441.0, "y": 789.0, "w": 462.0, "h": 80.0, "line_num": 9, "text": "return True"}, {"x": 362.0, "y": 889.0, "w": 1019.0, "h": 102.0, "line_num": 10, "text": "elf n/ 2 == x OR 1% 3= 6 ;"}, {"x": 463.0, "y": 995.0, "w": 518.0, "h": 76.0, "line_num": 11, "text": "return False"}, {"x": 324.0, "y": 1127.0, "w": 1200.0, "h": 95.0, "line_num": 12, "text": "for i in Range (5, int (n+\"0.5) + 1,6"}, {"x": 404.0, "y": 1221.0, "w": 1082.0, "h": 82.0, "line_num": 13, "text": "if 1% i =x or 1%(i+2) =6:"}, {"x": 537.0, "y": 1306.0, "w": 485.0, "h": 75.0, "line_num": 14, "text": "return False"}, {"x": 368.0, "y": 1386.0, "w": 550.0, "h": 79.0, "line_num": 15, "text": "return True"}, {"x": 280.0, "y": 1512.0, "w": 234.0, "h": 141.0, "line_num": 16, "text": "- nor"}, {"x": 810.0, "y": 1547.0, "w": 457.0, "h": 95.0, "line_num": 17, "text": "= - - main"}, {"x": 349.0, "y": 1662.0, "w": 394.0, "h": 103.0, "line_num": 18, "text": "main ()"}], "ir_algo_name": "gaussian-v1", "ir_algo_param_negative_delta_cluster_method": "nearest_ancestor", "ir_algo_output_code": "def main ():\nnum = int (input (\" Enter a Nmbu :\nprint (f\"Enums is &'prime if is_ prime (nom)\n    else not prim\u00e9 3\")\ndef is- prone (1) :\n    if n <= 12\n        return false\n    elif > <= 3:\n        return True\n    elf n/ 2 == x OR 1% 3= 6 ;\n        return False\n    for i in Range (5, int (n+\"0.5) + 1,6\n        if 1% i =x or 1%(i+2) =6:\n            return False\n        return True\n- nor\n    = - - main\n        main ()\n", "ir_algo_output_indented_lines": [{"x": 298.0, "y": 194.0, "w": 303.0, "h": 72.0, "line_num": 1, "text": "def main ():", "delta": null, "delta_type": null, "gaussian_prediction": null, "cluster_label": 0}, {"x": 303.0, "y": 274.0, "w": 773.0, "h": 74.0, "line_num": 2, "text": "num = int (input (\" Enter a Nmbu :", "delta": 5.0, "delta_type": "positive", "gaussian_prediction": "0", "cluster_label": 0}, {"x": 300.0, "y": 336.0, "w": 1105.0, "h": 61.0, "line_num": 3, "text": "print (f\"Enums is &'prime if is_ prime (nom)", "delta": -3.0, "delta_type": "negative", "gaussian_prediction": null, "cluster_label": 0}, {"x": 812.0, "y": 396.0, "w": 476.0, "h": 60.0, "line_num": 4, "text": "else not prim\u00e9 3\")", "delta": 512.0, "delta_type": "positive", "gaussian_prediction": "1", "cluster_label": 1}, {"x": 256.0, "y": 469.0, "w": 533.0, "h": 78.0, "line_num": 5, "text": "def is- prone (1) :", "delta": -556.0, "delta_type": "negative", "gaussian_prediction": null, "cluster_label": 0}, {"x": 379.0, "y": 542.0, "w": 390.0, "h": 68.0, "line_num": 6, "text": "if n <= 12", "delta": 123.0, "delta_type": "positive", "gaussian_prediction": "1", "cluster_label": 1}, {"x": 470.0, "y": 610.0, "w": 435.0, "h": 66.0, "line_num": 7, "text": "return false", "delta": 91.0, "delta_type": "positive", "gaussian_prediction": "1", "cluster_label": 2}, {"x": 384.0, "y": 702.0, "w": 480.0, "h": 82.0, "line_num": 8, "text": "elif > <= 3:", "delta": -86.0, "delta_type": "negative", "gaussian_prediction": null, "cluster_label": 1}, {"x": 441.0, "y": 789.0, "w": 462.0, "h": 80.0, "line_num": 9, "text": "return True", "delta": 57.0, "delta_type": "positive", "gaussian_prediction": "1", "cluster_label": 2}, {"x": 362.0, "y": 889.0, "w": 1019.0, "h": 102.0, "line_num": 10, "text": "elf n/ 2 == x OR 1% 3= 6 ;", "delta": -79.0, "delta_type": "negative", "gaussian_prediction": null, "cluster_label": 1}, {"x": 463.0, "y": 995.0, "w": 518.0, "h": 76.0, "line_num": 11, "text": "return False", "delta": 101.0, "delta_type": "positive", "gaussian_prediction": "1", "cluster_label": 2}, {"x": 324.0, "y": 1127.0, "w": 1200.0, "h": 95.0, "line_num": 12, "text": "for i in Range (5, int (n+\"0.5) + 1,6", "delta": -139.0, "delta_type": "negative", "gaussian_prediction": null, "cluster_label": 1}, {"x": 404.0, "y": 1221.0, "w": 1082.0, "h": 82.0, "line_num": 13, "text": "if 1% i =x or 1%(i+2) =6:", "delta": 80.0, "delta_type": "positive", "gaussian_prediction": "1", "cluster_label": 2}, {"x": 537.0, "y": 1306.0, "w": 485.0, "h": 75.0, "line_num": 14, "text": "return False", "delta": 133.0, "delta_type": "positive", "gaussian_prediction": "1", "cluster_label": 3}, {"x": 368.0, "y": 1386.0, "w": 550.0, "h": 79.0, "line_num": 15, "text": "return True", "delta": -169.0, "delta_type": "negative", "gaussian_prediction": null, "cluster_label": 2}, {"x": 280.0, "y": 1512.0, "w": 234.0, "h": 141.0, "line_num": 16, "text": "- nor", "delta": -88.0, "delta_type": "negative", "gaussian_prediction": null, "cluster_label": 0}, {"x": 810.0, "y": 1547.0, "w": 457.0, "h": 95.0, "line_num": 17, "text": "= - - main", "delta": 530.0, "delta_type": "positive", "gaussian_prediction": "1", "cluster_label": 1}, {"x": 349.0, "y": 1662.0, "w": 394.0, "h": 103.0, "line_num": 18, "text": "main ()", "delta": -461.0, "delta_type": "negative", "gaussian_prediction": null, "cluster_label": 2}], "ir_algo_output_edit_distance": 106, "prompting_method": "simple-test3", "lm_post_processed_code": "def main():\n    num = int(input(\"Enter a Num:\"))\n    print(f\"Num is prime\" if is_prime(num) else \"not prime\")\n\ndef is_prime(n):\n    if n <= 1:\n        return False\n    elif n <= 3:\n        return True\n    elif n % 2 == 0 or n % 3 == 0:\n        return False\n    for i in range(5, int(n**0.5) + 1, 6):\n        if n % i == 0 or n % (i+2) == 0:\n            return False\n    return True\n\nif __name__ == \"__main__\":\n    main()\n", "lm_post_processed_edit_distance": 16}