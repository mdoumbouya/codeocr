{"image_id": 27, "image_height": 885, "image_width": 1600, "ocr_provider": "Azure", "ocr_ouptut": [{"x": 54.0, "y": 56.0, "w": 1531.0, "h": 57.0, "line_num": 1, "text": "# Write a Python program to find the longest word in a given text"}, {"x": 45.0, "y": 132.0, "w": 303.0, "h": 55.0, "line_num": 2, "text": "def main ():"}, {"x": 142.0, "y": 184.0, "w": 913.0, "h": 60.0, "line_num": 3, "text": "sentence = input (\"Input a sentence: \")"}, {"x": 143.0, "y": 260.0, "w": 535.0, "h": 53.0, "line_num": 4, "text": "list = sentence . split ( )"}, {"x": 147.0, "y": 356.0, "w": 272.0, "h": 56.0, "line_num": 5, "text": "Lword = \" \""}, {"x": 137.0, "y": 452.0, "w": 447.0, "h": 54.0, "line_num": 6, "text": "for word in List:"}, {"x": 240.0, "y": 515.0, "w": 706.0, "h": 57.0, "line_num": 7, "text": "if len (word) > len (1-word):"}, {"x": 339.0, "y": 598.0, "w": 362.0, "h": 54.0, "line_num": 8, "text": "1- word = word"}, {"x": 136.0, "y": 680.0, "w": 374.0, "h": 60.0, "line_num": 9, "text": "print (1-word)"}, {"x": 82.0, "y": 743.0, "w": 582.0, "h": 54.0, "line_num": 10, "text": "if _name=\"_main_\":"}, {"x": 162.0, "y": 802.0, "w": 170.0, "h": 43.0, "line_num": 11, "text": "main ()"}], "ir_algo_name": "gaussian-v1", "ir_algo_param_negative_delta_cluster_method": "nearest_ancestor", "ir_algo_output_code": "# Write a Python program to find the longest word in a given text\ndef main ():\n    sentence = input (\"Input a sentence: \")\n    list = sentence . split ( )\n    Lword = \" \"\n    for word in List:\n        if len (word) > len (1-word):\n            1- word = word\n    print (1-word)\nif _name=\"_main_\":\n    main ()\n", "ir_algo_output_indented_lines": [{"x": 54.0, "y": 56.0, "w": 1531.0, "h": 57.0, "line_num": 1, "text": "# Write a Python program to find the longest word in a given text", "delta": null, "delta_type": null, "gaussian_prediction": null, "cluster_label": 0}, {"x": 45.0, "y": 132.0, "w": 303.0, "h": 55.0, "line_num": 2, "text": "def main ():", "delta": -9.0, "delta_type": "negative", "gaussian_prediction": null, "cluster_label": 0}, {"x": 142.0, "y": 184.0, "w": 913.0, "h": 60.0, "line_num": 3, "text": "sentence = input (\"Input a sentence: \")", "delta": 97.0, "delta_type": "positive", "gaussian_prediction": "1", "cluster_label": 1}, {"x": 143.0, "y": 260.0, "w": 535.0, "h": 53.0, "line_num": 4, "text": "list = sentence . split ( )", "delta": 1.0, "delta_type": "positive", "gaussian_prediction": "0", "cluster_label": 1}, {"x": 147.0, "y": 356.0, "w": 272.0, "h": 56.0, "line_num": 5, "text": "Lword = \" \"", "delta": 4.0, "delta_type": "positive", "gaussian_prediction": "0", "cluster_label": 1}, {"x": 137.0, "y": 452.0, "w": 447.0, "h": 54.0, "line_num": 6, "text": "for word in List:", "delta": -10.0, "delta_type": "negative", "gaussian_prediction": null, "cluster_label": 1}, {"x": 240.0, "y": 515.0, "w": 706.0, "h": 57.0, "line_num": 7, "text": "if len (word) > len (1-word):", "delta": 103.0, "delta_type": "positive", "gaussian_prediction": "1", "cluster_label": 2}, {"x": 339.0, "y": 598.0, "w": 362.0, "h": 54.0, "line_num": 8, "text": "1- word = word", "delta": 99.0, "delta_type": "positive", "gaussian_prediction": "1", "cluster_label": 3}, {"x": 136.0, "y": 680.0, "w": 374.0, "h": 60.0, "line_num": 9, "text": "print (1-word)", "delta": -203.0, "delta_type": "negative", "gaussian_prediction": null, "cluster_label": 1}, {"x": 82.0, "y": 743.0, "w": 582.0, "h": 54.0, "line_num": 10, "text": "if _name=\"_main_\":", "delta": -54.0, "delta_type": "negative", "gaussian_prediction": null, "cluster_label": 0}, {"x": 162.0, "y": 802.0, "w": 170.0, "h": 43.0, "line_num": 11, "text": "main ()", "delta": 80.0, "delta_type": "positive", "gaussian_prediction": "1", "cluster_label": 1}], "ir_algo_output_edit_distance": 31, "prompting_method": "simple-test3", "lm_post_processed_code": "# Write a Python program to find the longest word in a given text\n\ndef main():\n    sentence = input(\"Input a sentence: \")\n    List = sentence.split()\n    Lword = \" \"\n    for word in List:\n        if len(word) > len(Lword):\n            Lword = word\n    print(Lword)\nif __name__==\"__main__\":\n    main()\n", "lm_post_processed_edit_distance": 14}