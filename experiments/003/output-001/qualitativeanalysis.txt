This .txt file contains all the Quantitative Analysis results for the paper. The Quantitative Analysis was done one image
id 29, [45 - 54]. These problems are where students had a logical error within the code.

Legend:

ir = Indentation Recognition
algo = Algorithm
param = Parameter
ocr = Optical Charracter Recognition
lm = Language Model Post Correction

Method Name Breakdown: ir_algo_name _ ir_algo_param_bandwidth(If any) _ ocr_provider _ lmpc


Keywords Explanation:

- Edits = Fixing Space, Fixing Letter-Case, Omitting Irrelevant Text(Other texts around in the picture tha are not part of the code), Fixing Inaccurately Idetified Charracters by OCR

- Text inaccuracies compared to Ground Truth / General typos, and mistakes = Either it is a lot different than the ground truth, or it has some errors in the code, that makes it unexecutable(E.g, unexpected space, letter-case, etc)

- High = Text/Charracters has some similarities with ground truth. Needs more than 15 edits to execute it.

- Medium = Text/Charracters has some similarities with the ground truth, and with 5 - 15 manual edit it is executable.

- Low = Text/Charracters is very similar to ground truth, and with 1 - 4 edits it is executable.

- Without Indentaion = Code does not have any indentation, which is pivotal to the functionality of the code. This term is only used when no ir algorithm was used.

- Partial Indentaion Problem = Some part of the code is properly indented, some part of it is not. 

- Properly Indented = Code is properly indented, and the indentation is on spot.

- Indentation Error = A ir algoithm was used but the code has 2 or more levels of indentation errors. As in it did not identify 2 levels of indentation at all.

- Hallucinated Indentation = Code does not have any indentation, but the language model hallucinated the indentation.

- Hallucinating Towards Correct Answer = Language model changed a wrong student logic, and gave away the correct answer. This
  can include fixing and/or statmenets, fence post error, etc. Largely anything that gives away the answer to the student 

- Errors Expexted to fix by the Language Model Post Correction = Typos in the code, small syntax errors that can be caused by the OCR(letter_case, wrong indetificaiton of charracter), getting rid of irrelvant texts. Broadly fixing all sorts of iaccuracies of the OCR system.


* Analysis *

Method 1 -> none_Azure_none (30.23 \pm 1.83%) - Gave Away The Answer (0 / 11)
29 -> Code without any indentation, and with high Text inaccuracies compared to Ground Truth / General typos, and mistakes
45 -> Code without any indentation, and with low Text inaccuracies compared to Ground Truth / General typos, and mistakes
46 -> Code without any indentation, and with low Text inaccuracies compared to Ground Truth / General typos, and mistakes
47 -> Code without any indentation, and with low Text inaccuracies compared to Ground Truth / General typos, and mistakes
48 -> Code without any indentation, and with medium Text inaccuracies compared to Ground Truth / General typos, and mistakes
49 -> Code without any indentation, and with medium Text inaccuracies compared to Ground Truth / General typos, and mistakes
50 -> Code without any indentation, and with medium Text inaccuracies compared to Ground Truth / General typos, and mistakes
51 -> Code without any indentation, and with medium Text inaccuracies compared to Ground Truth / General typos, and mistakes
52 -> Code without any indentation, and with medium Text inaccuracies compared to Ground Truth / General typos, and mistakes
53 -> Code without any indentation, and with medium Text inaccuracies compared to Ground Truth / General typos, and mistakes
54 -> Code without any indentation, and with medium Text inaccuracies compared to Ground Truth / General typos, and mistakes. Includes irrelavant text that was not omitted in the ocr pipeline. 

Method 2 -> none_Azure_cot (21.36 \pm 1.19%) - Gave Away The Answer (0 / 11)
29 -> Code without any indentation, and with medium Text inaccuracies compared to Ground Truth / General typos, and mistakes
45 -> Code without any indentation. The texts are accurate
46 -> Code without any indentation, and with low Text inaccuracies compared to Ground Truth / General typos, and mistakes
47 -> Code without any indentation, and with low Text inaccuracies compared to Ground Truth / General typos, and mistakes
48 -> Code without any indentation. The texts are accurate
49 -> Code without any indentation. The texts are accurate
50 -> Code without any indentation. The texts are accurate
51 -> Code without any indentation. The texts are accurate
52 -> Partially hallucinated towards correct answer. Changed one divsion operator to modulo operator that could also potentailly 
      give away information about the other division operator. Code without any indentation, and with 
      low Text inaccuracies compared to Ground Truth / General typos, and mistakes. It should be noted that 
      the ocr identified '1' instead of '/', which definitely makes the Language Model more likely to hallucinate it to a '%' operator. 
      The language model did not hallucinate the other '/' operator to a '%' operator, because the OCR identified the '/' operator correctly.
      correctly.
53 -> Code without any indentation, and with low Text inaccuracies compared to Ground Truth / General typos, and mistakes
54 -> Code without any indentation. The texts are accurate

Method 3 -> none_Azure_cot-test1 (19.60 \pm 1.10%) - Gave Away The Answer (0 / 11)
29 -> Code without any indentation, and with medium Text inaccuracies compared to Ground Truth / General typos, and mistakes
45 -> Code without any indentation. The texts are accurate
46 -> Code without any indentation. The texts are accurate
47 -> Code without any indentation. The texts are accurate
48 -> Code without any indentation. The texts are accurate
49 -> Code without any indentation. The texts are accurate
50 -> Code without any indentation. The texts are accurate
51 -> Code without any indentation. The texts are accurate
52 -> Partially hallucinated towards correct answer. Changed one divsion operator to modulo operator that could also potentailly 
      give away information about the other division operator. Code without any indentation, and with 
      low Text inaccuracies compared to Ground Truth / General typos, and mistakes. It should be noted that 
      the ocr identified '1' instead of '/', which definitely makes the Language Model more likely to hallucinate it to a '%' operator. 
      The language model did not hallucinate the other '/' operator to a '%' operator, because the OCR identified the '/' operator correctly.
      correctly.
53 -> Code without any indentation, and with low Text inaccuracies compared to Ground Truth / General typos, and mistakes
54 -> Code without any indentation. The texts are accurate

Method 4 -> none_Azure_cot-test2 (19.98 \pm 1.09%) - Gave Away The Answer (0 / 11)
29 -> Code properly indented, and texts are accurate. It should be noted that there was no indentation information in the input
      for the lnaguage model, as we did not use any ir algorithm for this method. So, the indentaion was hallucinated by the model.
45 -> Code without any indentation. The texts are accurate
46 -> Code without any indentation, and with medium Text inaccuracies compared to Ground Truth / General typos, and mistakes.
47 -> Code without any indentation. The texts are accurate
48 -> Code without any indentation. The texts are accurate
49 -> Code without any indentation. The texts are accurate
50 -> Code without any indentation. The texts are accurate
51 -> Code without any indentation. The texts are accurate
52 -> Partially hallucinated towards correct answer. Changed one divsion operator to modulo operator that could also potentailly 
      give away information about the other division operator. Code without any indentation, and with 
      low Text inaccuracies compared to Ground Truth / General typos, and mistakes. It should be noted that 
      the ocr identified '1' instead of '/', which definitely makes the Language Model more likely to hallucinate it to a '%' operator. 
      The language model did not hallucinate the other '/' operator to a '%' operator, because the OCR identified the '/' operator correctly.
      correctly.
53 -> Code without any indentation, and with low Text inaccuracies compared to Ground Truth / General typos, and mistakes
54 -> Code without any indentation. The texts are accurate

Method 5 -> none_Azure_cot-test3 (20.15 \pm 1.04%) - Gave Away The Answer (1 / 11)
29 -> Code properly indented, and texts are accurate. It should be noted that there was no indentation information in the input
      for the lnaguage model, as we did not use any ir algorithm for this method. So, the indentaion was hallucinated by the model.
45 -> Code without any indentation. The texts are accurate
46 -> Hallucinated towards correct answer. Fixed a off by one error. Code without any indentation, and with medium Text inaccuracies compared to Ground Truth / General typos, and mistakes.
47 -> Code without any indentation. The texts are accurate
48 -> Code without any indentation. The texts are accurate
49 -> Code without any indentation. The texts are accurate
50 -> Code without any indentation. The texts are accurate
51 -> Code without any indentation. The texts are accurate
52 -> Partially hallucinated towards correct answer. Changed one divsion operator to modulo operator that could also potentailly 
      give away information about the other division operator. Code without any indentation, and with 
      low Text inaccuracies compared to Ground Truth / General typos, and mistakes. It should be noted that 
      the ocr identified '1' instead of '/', which definitely makes the Language Model more likely to hallucinate it to a '%' operator. 
      The language model did not hallucinate the other '/' operator to a '%' operator, because the OCR identified the '/' operator correctly.
      correctly.
53 -> Code without any indentation, and with low Text inaccuracies compared to Ground Truth / General typos, and mistakes
54 -> Code without any indentation. The texts are accurate

Method 6 -> none_Azure_cot-test4 (19.12 \pm 1.06%) - Gave Away The Answer (0 / 11)
29 -> Code has parital indentaion problem. The texts are accurate. It should be noted that there was no indentation information in the input
      for the lnaguage model, as we did not use any ir algorithm for this method. So, the indentaion was hallucinated by the model.
45 -> Code without any indentation. The texts are accurate
46 -> Code without any indentation, and with low Text inaccuracies compared to Ground Truth / General typos, and mistakes.
47 -> Code without any indentation. The texts are accurate
48 -> Code without any indentation. The texts are accurate
49 -> Code without any indentation. The texts are accurate
50 -> Code without any indentation. The texts are accurate
51 -> Code without any indentation. The texts are accurate
52 -> Code without any indentation, and with low Text inaccuracies compared to Ground Truth / General typos, and mistakes.
53 -> Code without any indentation, and with low Text inaccuracies compared to Ground Truth / General typos, and mistakes.
54 -> Code without any indentation. The texts are accurate

Method 7 -> none_Azure_cot-test5 (18.07 \pm 1.04%) - Gave Away The Answer (1 / 11)
29 -> Code has parital indentaion problem. The texts are accurate. It should be noted that there was no indentation information in the input
      for the lnaguage model, as we did not use any ir algorithm for this method. So, the indentaion was hallucinated by the model.
45 -> Code without any indentation. The texts are accurate
46 -> Hallucinated towards correct answer. Fixed a off by one error. Code without any indentation, and with medium Text inaccuracies compared to Ground Truth / General typos, and mistakes.
47 -> Code without any indentation. The texts are accurate
48 -> Code without any indentation. The texts are accurate
49 -> Code without any indentation. The texts are accurate
50 -> Code without any indentation. The texts are accurate
51 -> Code without any indentation. The texts are accurate
52 -> Code without any indentation, and with low Text inaccuracies compared to Ground Truth / General typos, and mistakes.
53 -> Code without any indentation, and with low Text inaccuracies compared to Ground Truth / General typos, and mistakes.
54 -> Code without any indentation. The texts are accurate

Method 8 -> none_Azure_simple (6.36 \pm 1.13%) - Gave Away The Answer (7 / 11)
29 -> Hallucinated towards correct answer. Changed, `or` to `and` to fix the logic. Code properly indented, and texts are accurate. It should be noted that there was no indentation information in the input
      for the lnaguage model, as we did not use any ir algorithm for this method. So, the indentaion was hallucinated by the model.
45 -> Hallucinated towards correct answer. Changed the scope of the variable to fix the wrong logic in code. Code properly indented, and texts are accurate. It should be noted that there was no indentation information in the input
      for the lnaguage model, as we did not use any ir algorithm for this method. So, the indentaion was hallucinated by the model.
46 -> Hallucinated towards correct answer. Fixed a off by one error. Code properly indented, and texts are accurate. It should be noted that there was no indentation information in the input
      for the lnaguage model, as we did not use any ir algorithm for this method. So, the indentaion was hallucinated by the model.
47 -> Code properly indented, and texts are accurate. It should be noted that there was no indentation information in the input
      for the lnaguage model, as we did not use any ir algorithm for this method. So, the indentaion was hallucinated by the model.
48 -> Hallucinated towards correct answer. Fixed two off by one error. Code properly indented, and texts are accurate. It should be noted that there was no indentation information in the input
      for the lnaguage model, as we did not use any ir algorithm for this method. So, the indentaion was hallucinated by the model.
49 -> Code properly indented, and texts are accurate. It should be noted that there was no indentation information in the input
      for the lnaguage model, as we did not use any ir algorithm for this method. So, the indentaion was hallucinated by the model.
50 -> Code properly indented, and texts are accurate. It should be noted that there was no indentation information in the input
      for the lnaguage model, as we did not use any ir algorithm for this method. So, the indentaion was hallucinated by the model.
51 -> Hallucinated towards correct answer. Changed the scope of the variable to fix the wrong logic in code. Code properly indented, and texts are accurate. It should be noted that there was no indentation information in the input
      for the lnaguage model, as we did not use any ir algorithm for this method. So, the indentaion was hallucinated by the model.
52 -> Hallucinated towards correct answer. Changed two divsion operator to modulo operator to correct the logic of code. Code properly indented, and texts are accurate. It should be noted that there was no indentation information in the input
      for the lnaguage model, as we did not use any ir algorithm for this method. So, the indentaion was hallucinated by the model.
53 -> Code properly indented, and texts are accurate. It should be noted that there was no indentation information in the input
      for the lnaguage model, as we did not use any ir algorithm for this method. So, the indentaion was hallucinated by the model.
54 -> Hallucinated towards correct answer. Changed the value of a variable to fix the logic. Code properly indented, and texts are accurate. It should be noted that there was no indentation information in the input
      for the lnaguage model, as we did not use any ir algorithm for this method. So, the indentaion was hallucinated by the model.

Method 9 -> none_Azure_simple-test1 (9.28 \pm 1.29%) - Gave Away The Answer (0 / 11)
29 -> Code properly indented, and texts are accurate. It should be noted that there was no indentation information in the input
      for the lnaguage model, as we did not use any ir algorithm for this method. So, the indentaion was hallucinated by the model.
45 -> Code properly indented, and texts are accurate. It should be noted that there was no indentation information in the input
      for the lnaguage model, as we did not use any ir algorithm for this method. So, the indentaion was hallucinated by the model.
46 -> Code without any indentation, and with medium Text inaccuracies compared to Ground Truth / General typos, and mistakes.
47 -> Code properly indented, and texts are accurate. It should be noted that there was no indentation information in the input
      for the lnaguage model, as we did not use any ir algorithm for this method. So, the indentaion was hallucinated by the model.
48 -> Code properly indented, and texts are accurate. It should be noted that there was no indentation information in the input
      for the lnaguage model, as we did not use any ir algorithm for this method. So, the indentaion was hallucinated by the model.
49 -> Code properly indented, and texts are accurate. It should be noted that there was no indentation information in the input
      for the lnaguage model, as we did not use any ir algorithm for this method. So, the indentaion was hallucinated by the model.
50 -> Code without any indentation, and with medium Text inaccuracies compared to Ground Truth / General typos, and mistakes.
51 -> Partially hallucinated towards correct answer. Changed the hallucination to fix the code. However, it should be noted that there was
      the common problem of changing the scope of a varaible to fix the code, which the langauge model did not hallucinate in this case. 
      Code properly indented, and texts are accurate. It should be noted that there was no indentation information in the input
      for the lnaguage model, as we did not use any ir algorithm for this method. So, the indentaion was hallucinated by the model.
52 -> Partially hallucinated towards correct answer. Changed one divsion operator to modulo operator that could also potentailly 
      give away information about the other division operator. Code without any indentation, and with 
      low Text inaccuracies compared to Ground Truth / General typos, and mistakes. It should be noted that 
      the ocr identified '1' instead of '/', which definitely makes the Language Model more likely to hallucinate it to a '%' operator. 
      The language model did not hallucinate the other '/' operator to a '%' operator, because the OCR identified the '/' operator correctly.
      correctly.
53 -> Code without any indentation, and with medium Text inaccuracies compared to Ground Truth / General typos, and mistakes.
54 -> Code properly indented, and texts are accurate. However, there was some irrelvant text that was not omitted. It should be noted that there was no indentation information in the input
      for the lnaguage model, as we did not use any ir algorithm for this method. So, the indentaion was hallucinated by the model.

Method 10 -> none_Azure_simple-test2 (8.26 \pm 1.15%) - Gave Away The Answer (3 / 11)
29 -> Code properly indented, and texts are accurate. It should be noted that there was no indentation information in the input
      for the lnaguage model, as we did not use any ir algorithm for this method. So, the indentaion was hallucinated by the model.
45 -> Hallucinated towards correct answer. Changed the scope of the variable to fix the wrong logic in code. Code properly indented, and texts are accurate. It should be noted that there was no indentation information in the input
      for the lnaguage model, as we did not use any ir algorithm for this method. So, the indentaion was hallucinated by the model.
46 -> Code without any indentation, and with medium Text inaccuracies compared to Ground Truth / General typos, and mistakes.
47 -> Code properly indented, and texts are accurate. It should be noted that there was no indentation information in the input
      for the lnaguage model, as we did not use any ir algorithm for this method. So, the indentaion was hallucinated by the model.
48 -> Hallucinated towards correct answer. Fixed two off by one error. Code properly indented, and texts are accurate. It should be noted that there was no indentation information in the input
      for the lnaguage model, as we did not use any ir algorithm for this method. So, the indentaion was hallucinated by the model.
49 -> Code properly indented, and texts are accurate. It should be noted that there was no indentation information in the input
      for the lnaguage model, as we did not use any ir algorithm for this method. So, the indentaion was hallucinated by the model.
50 -> Code without any indentation. The texts are accurate
51 -> Code without any indentation. The texts are accurate
52 -> Partially hallucinated towards correct answer. Changed one divsion operator to modulo operator that could also potentailly 
      give away information about the other division operator. Code without any indentation, and with 
      low Text inaccuracies compared to Ground Truth / General typos, and mistakes. It should be noted that 
      the ocr identified '1' instead of '/', which definitely makes the Language Model more likely to hallucinate it to a '%' operator. 
      The language model did not hallucinate the other '/' operator to a '%' operator, because the OCR identified the '/' operator correctly.
      correctly.
53 -> Code properly indented, and texts are accurate. It should be noted that there was no indentation information in the input
      for the lnaguage model, as we did not use any ir algorithm for this method. So, the indentaion was hallucinated by the model.
54 -> Hallucinated towards correct answer. Changed the value of a variable to fix the logic. Code properly indented, and texts are accurate. It should be noted that there was no indentation information in the input
      for the lnaguage model, as we did not use any ir algorithm for this method. So, the indentaion was hallucinated by the model.

Method 11 -> none_Azure_simple-test3 (6.47 \pm 0.95%) - Gave Away The Answer (0 / 11)
29 -> Code properly indented, and texts are accurate. It should be noted that there was no indentation information in the input
      for the lnaguage model, as we did not use any ir algorithm for this method. So, the indentaion was hallucinated by the model.
45 -> Code properly indented, and texts are accurate. It should be noted that there was no indentation information in the input
      for the lnaguage model, as we did not use any ir algorithm for this method. So, the indentaion was hallucinated by the model.
46 -> Code properly indented, and texts are accurate. It should be noted that there was no indentation information in the input
      for the lnaguage model, as we did not use any ir algorithm for this method. So, the indentaion was hallucinated by the model.
47 -> Code properly indented, and texts are accurate. It should be noted that there was no indentation information in the input
      for the lnaguage model, as we did not use any ir algorithm for this method. So, the indentaion was hallucinated by the model.
48 -> Code properly indented, and texts are accurate. It should be noted that there was no indentation information in the input
      for the lnaguage model, as we did not use any ir algorithm for this method. So, the indentaion was hallucinated by the model.
49 -> Code properly indented, and texts are accurate. It should be noted that there was no indentation information in the input
      for the lnaguage model, as we did not use any ir algorithm for this method. So, the indentaion was hallucinated by the model.
50 -> Code properly indented, and texts are accurate. It should be noted that there was no indentation information in the input
      for the lnaguage model, as we did not use any ir algorithm for this method. So, the indentaion was hallucinated by the model.
51 -> Code properly indented, and texts are accurate. It should be noted that there was no indentation information in the input
      for the lnaguage model, as we did not use any ir algorithm for this method. So, the indentaion was hallucinated by the model.
52 -> Partially hallucinated towards correct answer. Changed one divsion operator to modulo operator that could also potentailly 
      give away information about the other division operator. Code without any indentation, and with 
      low Text inaccuracies compared to Ground Truth / General typos, and mistakes. It should be noted that 
      the ocr identified '1' instead of '/', which definitely makes the Language Model more likely to hallucinate it to a '%' operator. 
      The language model did not hallucinate the other '/' operator to a '%' operator, because the OCR identified the '/' operator correctly.
      correctly.
53 -> Code properly indented, and texts are accurate. It should be noted that there was no indentation information in the input
      for the lnaguage model, as we did not use any ir algorithm for this method. So, the indentaion was hallucinated by the model.
54 -> Code properly indented, and texts are accurate. It should be noted that there was no indentation information in the input
      for the lnaguage model, as we did not use any ir algorithm for this method. So, the indentaion was hallucinated by the model.

Method 12 -> meanshift-v1_estimated_Azure_none (28.27 \pm 5.02%) - Gave Away The Answer (0 / 11)
29 -> Code has partial indentaion error, and high Text inaccuracies compared to Ground Truth / General typos, and mistakes.
45 -> Code properly indented, and low Text inaccuracies compared to Ground Truth / General typos, and mistakes.
46 -> Code has partial indentaion error, and medium Text inaccuracies compared to Ground Truth / General typos, and mistakes.
47 -> Code properly indented, and low Text inaccuracies compared to Ground Truth / General typos, and mistakes.
48 -> Code has partial indentaion error, and medium Text inaccuracies compared to Ground Truth / General typos, and mistakes.
49 -> Code properly indented, and low Text inaccuracies compared to Ground Truth / General typos, and mistakes.
50 -> Code has partial indentaion error, and medium Text inaccuracies compared to Ground Truth / General typos, and mistakes.
51 -> Code properly indented, and medium Text inaccuracies compared to Ground Truth / General typos, and mistakes.
52 -> Code properly indented, and medium Text inaccuracies compared to Ground Truth / General typos, and mistakes.
53 -> Code has partial indentaion error, and medium Text inaccuracies compared to Ground Truth / General typos, and mistakes.
54 -> Code properly indented, and with medium Text inaccuracies compared to Ground Truth / General typos, and mistakes. Includes irrelavant text that was not omitted in the ocr pipeline. 

Method 13 -> meanshift-v1_estimated_Azure_cot (15.20 \pm 1.72%)  - Gave Away The Answer (0 / 11)
29 -> Code has partial indentaion error, and high Text inaccuracies compared to Ground Truth / General typos, and mistakes. The langauge model in this case
      strictly adhered to the prompt, and input that it got, and made very minimal typo fixes. But, it still had a high Text inaccuracies compared to Ground Truth / General typos, and mistakes. Did not fix errors expected to be fixed by the Language Model Post Correction.
45 -> Code properly indented, and and low Text inaccuracies compared to Ground Truth / General typos, and mistakes.
46 -> Code has partial indentaion error, and low Text inaccuracies compared to Ground Truth / General typos, and mistakes.
47 -> Code has partial indentaion error, and low Text inaccuracies compared to Ground Truth / General typos, and mistakes.
48 -> Code has partial indentaion error, and low Text inaccuracies compared to Ground Truth / General typos, and mistakes.
49 -> Code has partial indentaion error, and texts are accurate.
50 -> Code without any indentation, and texts are accurate. This one is a interesting case, as the ir_algorithm sent in the indetation information fo the code
      but the language model hallucinated to not have the indentation. 
51 -> Code without any indentation, and texts are accurate. This one is a interesting case, as the ir_algorithm sent in the indetation information fo the code
      but the language model hallucinated to not have the indentation. 
52 -> Partially hallucinated towards correct answer. Changed one divsion operator to modulo operator that could also potentailly 
      give away information about the other division operator. Code has partial indentation error, and texst are accurate. It should be noted that 
      the ocr identified '1' instead of '/', which definitely makes the Language Model more likely to hallucinate it to a '%' operator. 
      The language model did not hallucinate the other '/' operator to a '%' operator, because the OCR identified the '/' operator correctly.
      correctly.
53 -> Code has partial indentaion error, and low Text inaccuracies compared to Ground Truth / General typos, and mistakes. It should be noted that, the only
      text accuracy is that the function definition does not have 'def'. This error came from OCR system, and the language model did not 
      fix it by adding/hallucinating a new text.
54 -> Code wth proper indentation, and low Text inaccuracies compared to Ground Truth / General typos, and mistakes.

Method 14 -> meanshift-v1_estimated_Azure_cot-test1 (13.98 \pm 1.31%)  - Gave Away The Answer (0 / 11)
29 -> Code has partial indentaion error, and texts are accurate.
45 -> Code properly indented, and low Text inaccuracies compared to Ground Truth / General typos, and mistakes.
46 -> Code properly indented, and low Text inaccuracies compared to Ground Truth / General typos, and mistakes.
47 -> Code properly indented, and low Text inaccuracies compared to Ground Truth / General typos, and mistakes.
48 -> Code has partial indentaion error, and low Text inaccuracies compared to Ground Truth / General typos, and mistakes.
49 -> Code has partial indentaion error, and texts are accurate.
50 -> Code without any indentation, and texts are accurate. This one is a interesting case, as the ir_algorithm sent in the indetation information fo the code
      but the language model hallucinated to not have the indentation. 
51 -> Code has partial indentaion error, and low Text inaccuracies compared to Ground Truth / General typos, and mistakes.
52 -> Code has partial indentaion error, and low Text inaccuracies compared to Ground Truth / General typos, and mistakes.
53 -> Code has partial indentaion error, and low Text inaccuracies compared to Ground Truth / General typos, and mistakes. It should be noted that, the only
      text accuracy is that the function definition does not have 'def'. This error came from OCR system, and the language model did not 
      fix it by adding/hallucinating a new text.
54 -> Code wth proper indentation, and low Text inaccuracies compared to Ground Truth / General typos, and mistakes.

Method 15 -> meanshift-v1_estimated_Azure_cot-test2 (15.36 \pm 1.64%) - Gave Away The Answer (1 / 11)
29 -> Code has partial indentaion error, and high Text inaccuracies compared to Ground Truth / General typos, and mistakes. The langauge model in this case
      strictly adhered to the prompt, and input that it got, and made very minimal typo fixes. But, it still had a high Text inaccuracies compared to Ground Truth / General typos, and mistakes. Did not fix errors expected to be fixed by the Language Model Post Correction.
45 -> Code properly indented, and and low Text inaccuracies compared to Ground Truth / General typos, and mistakes.
46 -> Hallucinated towards correct answer. Fixed an off by one error. Code partial indentaion error, and low amount of text inaccuracies 
      compared to ground truth.
47 -> Code properly indented, and low Text inaccuracies compared to Ground Truth / General typos, and mistakes.
48 -> Code without any indentation, and texts are accurate. This one is a interesting case, as the ir_algorithm sent in the indetation information fo the code
      but the language model hallucinated to not have the indentation. 
49 -> Code has partial indentaion error, and texts are accurate.
50 -> Code without any indentation, and texts are accurate. This one is a interesting case, as the ir_algorithm sent in the indetation information fo the code
      but the language model hallucinated to not have the indentation. 
51 -> Code without any indentation, and texts are accurate. This one is a interesting case, as the ir_algorithm sent in the indetation information fo the code
      but the language model hallucinated to not have the indentation. 
52 -> Partially hallucinated towards correct answer. Changed one divsion operator to modulo operator that could also potentailly 
      give away information about the other division operator Code has partial indentation error, and texts are accurate. It should be noted that 
      the ocr identified '1' instead of '/', which definitely makes the Language Model more likely to hallucinate it to a '%' operator. 
      The language model did not hallucinate the other '/' operator to a '%' operator, because the OCR identified the '/' operator correctly.
      correctly.
53 -> Code has partial indentaion error, and low Text inaccuracies compared to Ground Truth / General typos, and mistakes. It should be noted that, the only
      text accuracy is that the function definition does not have 'def'. This error came from OCR system, and the language model did not 
      fix it by adding/hallucinating a new text.
54 -> Code wth proper indentation, and low Text inaccuracies compared to Ground Truth / General typos, and mistakes.

Method 16 -> meanshift-v1_estimated_Azure_cot-test3 (14.46 \pm 1.30%) - Gave Away The Answer (1 / 11)
29 -> Code has partial indentaion error, and texts are accurate.
45 -> Code properly indented, and and low Text inaccuracies compared to Ground Truth / General typos, and mistakes.
46 -> Hallucinated towards correct answer. Fixed an off by one error. Code partial indentaion error, and low amount of text inaccuracies 
      compared to ground truth.
47 -> Code properly indented, and low Text inaccuracies compared to Ground Truth / General typos, and mistakes.
48 -> Code has partial indentaion error, and texts are accurate.
49 -> Code has partial indentaion error, and texts are accurate.
50 -> Code without any indentation, and texts are accurate. This one is a interesting case, as the ir_algorithm sent in the indetation information fo the code
      but the language model hallucinated to not have the indentation. 
51 -> Code without any indentation, and texts are accurate. This one is a interesting case, as the ir_algorithm sent in the indetation information fo the code
      but the language model hallucinated to not have the indentation. 
52 -> Code has partial indentaion error, and low Text inaccuracies compared to Ground Truth / General typos, and mistakes.
53 -> Code has partial indentaion error, and low Text inaccuracies compared to Ground Truth / General typos, and mistakes. It should be noted that, the only
      text accuracy is that the function definition does not have 'def'. This error came from OCR system, and the language model did not 
      fix it by adding/hallucinating a new text.
54 -> Code has partial indentaion error, and low Text inaccuracies compared to Ground Truth / General typos, and mistakes.

Method 17 -> meanshift-v1_estimated_Azure_cot-test4 (13.68 \pm 1.44%) - Gave Away The Answer (2 / 11)
29 -> Code has partial indentaion error, and texts are accurate.
45 -> Code properly indented, and and low Text inaccuracies compared to Ground Truth / General typos, and mistakes.
46 -> Hallucinated towards correct answer. Fixed an off by one error. Code has proper indentation, and low amount of text inaccuracies 
      compared to ground truth.
47 -> Code properly indented, and low Text inaccuracies compared to Ground Truth / General typos, and mistakes.
48 -> Hallucinated towards correct answer. Fixed two off by one error. Code has partial indentaion error, and texts are accurate.
49 -> Code properly indented, and texts are accurate.
50 -> Code without any indentation, and texts are accurate. This one is a interesting case, as the ir_algorithm sent in the indetation information fo the code
      but the language model hallucinated to not have the indentation. 
51 -> Code has partial indentaion error, and texts are accurate
52 -> Code has partial indentaion error, and low Text inaccuracies compared to Ground Truth / General typos, and mistakes.
53 -> Code has partial indentaion error, and low Text inaccuracies compared to Ground Truth / General typos, and mistakes. It should be noted that, the only
      text accuracy is that the function definition does not have 'def'. This error came from OCR system, and the language model did not 
      fix it by adding/hallucinating a new text.
54 -> Code properly indented, and low Text inaccuracies compared to Ground Truth / General typos, and mistakes.

Method 18 -> meanshift-v1_estimated_Azure_cot-test5 (10.72 \pm 1.06%) - Gave Away The Answer (1 / 11)
29 -> Code has partial indentaion error, and texts are accurate.
45 -> Code properly indented, and and low Text inaccuracies compared to Ground Truth / General typos, and mistakes.
46 -> Hallucinated towards correct answer. Fixed an off by one error. Code has proper indentation, and low amount of text inaccuracies 
      compared to ground truth.
47 -> Code properly indented, and low Text inaccuracies compared to Ground Truth / General typos, and mistakes.
48 -> Code has partial indentaion error, and texts are accurate.
49 -> Code properly indented, and texts are accurate.
50 -> Code properly indented, and texts are accurate. It should be noted that our ir alogirthm did not send the correct indentation information
      to the language model. But, the language model hallucinated the correct indentation.
51 -> Code has partial indentaion error, and texts are accurate
52 -> Code has partial indentaion error, and low Text inaccuracies compared to Ground Truth / General typos, and mistakes.
53 -> Code has partial indentaion error, and low Text inaccuracies compared to Ground Truth / General typos, and mistakes. It should be noted that, the only
      text accuracy is that the function definition does not have 'def'. This error came from OCR system, and the language model did not 
      fix it by adding/hallucinating a new text.
54 -> Code has partial indentaion error, and texts are accurate.

Method 19 -> meanshift-v1_estimated_Azure_simple (6.25 \pm 1.39%) - Gave Away The Answer (7 / 11)
29 -> Hallucinated towards correct answer. Changed, `or` to `and` to fix the logic. Code properly indented, and texts are accurate. It 
      should be noted that our ir alogirthm did not send the correct indentation information to the language model. But, the language 
      model hallucinated the correct indentation.
45 -> Hallucinated towards correct answer. Changed the scope of the variable to fix the wrong logic in code. Code properly indented, and texts are accurate. It 
      should be noted that our ir alogirthm did not send the correct indentation information to the language model. But, the language 
      model hallucinated the correct indentation.
46 -> Hallucinated towards correct answer. Fixed a off by one error. Code properly indented, and texts are accurate. It should be noted 
      that our ir alogirthm did not send the correct indentation information to the language model. But, the language model hallucinated 
      the correct indentation.
47 -> Code properly indented, and texts are accurate.
48 -> Hallucinated towards correct answer. Fixed two off by one error. Code properly indented, and texts are accurate. It 
      should be noted that our ir alogirthm did not send the correct indentation information to the language model. But, the language 
      model hallucinated the correct indentation.
49 -> Code properly indented, and texts are accurate.
50 -> Code properly indented, and texts are accurate. It should be noted that our ir alogirthm did not send the correct indentation information to the language model. But, the language 
      model hallucinated the correct indentation.
51 -> Hallucinated towards correct answer. Changed the scope of the variable to fix the wrong logic in code. Code properly indented, and texts are accurate. It 
      should be noted that our ir alogirthm did not send the correct indentation information to the language model. But, the language 
      model hallucinated the correct indentation.
52 -> Hallucinated towards correct answer. Changed two divsion operator to modulo operator to correct the logic of code. Code properly indented, and texts are accurate.
53 -> Code properly indented, and texts are accurate. It should be noted that our ir alogirthm did not send the correct indentation information to the language model. But, the language 
      model hallucinated the correct indentation.
54 -> Hallucinated towards correct answer. Changed the value of a variable to fix the logic. Code properly indented, and texts are accurate.

Method 20 -> meanshift-v1_estimated_Azure_simple-test1 (6.64 \pm 1.25%) - Gave Away The Answer (1 / 11)
29 -> Code properly indented, and texts are accurate. It should be noted that our ir alogirthm did not send the correct indentation 
      information to the language model. But, the language model hallucinated the correct indentation.
45 -> Code properly indented, and texts are accurate.
46 -> Code properly indented, and texts are accurate.
47 -> Code properly indented, and texts are accurate.
48 -> Hallucinated towards correct answer. Fixed two off by one error. Code properly indented, and texts are accurate. It 
      should be noted that our ir alogirthm did not send the correct indentation information to the language model. But, the language 
      model hallucinated the correct indentation.
49 -> Code properly indented, and texts are accurate.
50 -> Code properly indented, and texts are accurate. It should be noted that our ir alogirthm did not send the correct indentation information to the language model. But, the language 
      model hallucinated the correct indentation.
51 -> Code properly indented, and texts are accurate. It should be noted that our ir alogirthm did not send the correct indentation 
      information to the language model. But, the language model hallucinated the correct indentation.
52 -> Partially Hallucinated towards correct answer. Changed one divsion operator to modulo operator that could also potentailly 
      give away information about the other division operator. Code properly indented, and texts are accurate. It should be noted that 
      the ocr identified '1' instead of '/', which definitely makes the Language Model more likely to hallucinate it to a '%' operator. 
      The language model did not hallucinate the other '/' operator to a '%' operator, because the OCR identified the '/' operator correctly.
      correctly.
53 -> Code properly indented, and texts are accurate. It should be noted that our ir alogirthm did not send the correct indentation information to the language model. But, the language 
      model hallucinated the correct indentation.
54 -> Code properly indented, and texts are accurate. However, there was some irrelvant text that was not omitted, which was expected by the Language Model Post Correction.

Method 21 -> meanshift-v1_estimated_Azure_simple-test2 (5.69 \pm 0.89%) - Gave Away The Answer (1 / 11)
29 -> Code properly indented, and texts are accurate. It should be noted that our ir alogirthm did not send the correct indentation 
      information to the language model. But, the language model hallucinated the correct indentation.
45 -> Code properly indented, and texts are accurate.
46 -> Code properly indented, and texts are accurate.
47 -> Code properly indented, and texts are accurate.
48 -> Hallucinated towards correct answer. Fixed two off by one error. Code properly indented, and texts are accurate. It 
      should be noted that our ir alogirthm did not send the correct indentation information to the language model. But, the language 
      model hallucinated the correct indentation.
49 -> Code properly indented, and texts are accurate.
50 -> Code properly indented, and texts are accurate. It should be noted that our ir alogirthm did not send the correct indentation information to the language model. But, the language 
      model hallucinated the correct indentation.
51 -> Code properly indented, and texts are accurate. It should be noted that our ir alogirthm did not send the correct indentation information to the language model. But, the language 
      model hallucinated the correct indentation.
52 -> Partially Hallucinated towards correct answer. Changed one divsion operator to modulo operator that could also potentailly 
      give away information about the other division operator. Code properly indented, and texts are accurate. It should be noted that 
      the ocr identified '1' instead of '/', which definitely makes the Language Model more likely to hallucinate it to a '%' operator. 
      The language model did not hallucinate the other '/' operator to a '%' operator, because the OCR identified the '/' operator correctly.
      correctly.
53 -> Code properly indented, and texts are accurate. It should be noted that our ir alogirthm did not send the correct indentation information to the language model. But, the language 
      model hallucinated the correct indentation.
54 -> Code properly indented, and texts are accurate.

Method 22 -> meanshift-v1_estimated_Azure_simple-test3 (6.19 \pm 1.29%) - Gave Away The Answer (0 / 11)
29 -> Code properly indented, and texts are accurate. It should be noted that our ir alogirthm did not send the correct indentation 
      information to the language model. But, the language model hallucinated the correct indentation.
45 -> Code properly indented, and texts are accurate.
46 -> Code properly indented, and texts are accurate.
47 -> Code properly indented, and texts are accurate.
48 -> Code properly indented, and and low Text inaccuracies compared to Ground Truth / General typos, and mistakes. It should be noted 
      that our ir alogirthm did not send the correct indentation information to the language model. But, the language model 
      hallucinated the correct indentation.Thre is only two case where it was not accurate. But, that was a limitaion of OCR, it 
      did not parse the text properly. The language model did not hallucinate to fix that.
49 -> Code properly indented, and texts are accurate.
50 -> Code properly indented, and texts are accurate. It should be noted that our ir alogirthm did not send the correct indentation 
      information to the language model. But, the language model hallucinated the correct indentation.
51 -> Code properly indented, and texts are accurate. It should be noted that our ir alogirthm did not send the correct indentation 
      information to the language model. But, the language model hallucinated the correct indentation.
52 -> Partially Hallucinated towards correct answer. Changed one divsion operator to modulo operator that could also potentailly 
      give away information about the other division operator. Code properly indented, and texts are accurate. It should be noted that 
      the ocr identified '1' instead of '/', which definitely makes the Language Model more likely to hallucinate it to a '%' operator. 
      The language model did not hallucinate the other '/' operator to a '%' operator, because the OCR identified the '/' operator correctly.
      correctly.
53 -> Code properly indented, and texts are accurate. It should be noted that our ir alogirthm did not send the correct indentation 
      information to the language model. But, the language model hallucinated the correct indentation.
54 -> Code properly indented, and texts are accurate.